# ARJUN COMPLETE THIS
powers = [
            [0, 0, 0, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 1],
            [2, 0, 0, 0, 0, 0, 0],
            [1, 1, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 0],
            [1, 0, 0, 1, 0, 0, 0],
            [1, 0, 0, 0, 1, 0, 0],
            [1, 0, 0, 0, 0, 1, 0],
            [1, 0, 0, 0, 0, 0, 1],
            [0, 2, 0, 0, 0, 0, 0],
            [0, 1, 1, 0, 0, 0, 0],
            [0, 1, 0, 1, 0, 0, 0],
            [0, 1, 0, 0, 1, 0, 0],
            [0, 1, 0, 0, 0, 1, 0],
            [0, 1, 0, 0, 0, 0, 1],
            [0, 0, 2, 0, 0, 0, 0],
            [0, 0, 1, 1, 0, 0, 0],
            [0, 0, 1, 0, 1, 0, 0],
            [0, 0, 1, 0, 0, 1, 0],
            [0, 0, 1, 0, 0, 0, 1],
            [0, 0, 0, 2, 0, 0, 0],
            [0, 0, 0, 1, 1, 0, 0],
            [0, 0, 0, 1, 0, 1, 0],
            [0, 0, 0, 1, 0, 0, 1],
            [0, 0, 0, 0, 2, 0, 0],
            [0, 0, 0, 0, 1, 1, 0],
            [0, 0, 0, 0, 1, 0, 1],
            [0, 0, 0, 0, 0, 2, 0],
            [0, 0, 0, 0, 0, 1, 1],
            [0, 0, 0, 0, 0, 0, 2],
            [3, 0, 0, 0, 0, 0, 0],
            [2, 1, 0, 0, 0, 0, 0],
            [2, 0, 1, 0, 0, 0, 0],
            [2, 0, 0, 1, 0, 0, 0],
            [2, 0, 0, 0, 1, 0, 0],
            [2, 0, 0, 0, 0, 1, 0],
            [2, 0, 0, 0, 0, 0, 1],
            [1, 2, 0, 0, 0, 0, 0],
            [1, 1, 1, 0, 0, 0, 0],
            [1, 1, 0, 1, 0, 0, 0],
            [1, 1, 0, 0, 1, 0, 0],
            [1, 1, 0, 0, 0, 1, 0],
            [1, 1, 0, 0, 0, 0, 1],
            [1, 0, 2, 0, 0, 0, 0],
            [1, 0, 1, 1, 0, 0, 0],
            [1, 0, 1, 0, 1, 0, 0],
            [1, 0, 1, 0, 0, 1, 0],
            [1, 0, 1, 0, 0, 0, 1],
            [1, 0, 0, 2, 0, 0, 0],
            [1, 0, 0, 1, 1, 0, 0],
            [1, 0, 0, 1, 0, 1, 0],
            [1, 0, 0, 1, 0, 0, 1],
            [1, 0, 0, 0, 2, 0, 0],
            [1, 0, 0, 0, 1, 1, 0],
            [1, 0, 0, 0, 1, 0, 1],
            [1, 0, 0, 0, 0, 2, 0],
            [1, 0, 0, 0, 0, 1, 1],
            [1, 0, 0, 0, 0, 0, 2],
            [0, 3, 0, 0, 0, 0, 0],
            [0, 2, 1, 0, 0, 0, 0],
            [0, 2, 0, 1, 0, 0, 0],
            [0, 2, 0, 0, 1, 0, 0],
            [0, 2, 0, 0, 0, 1, 0],
            [0, 2, 0, 0, 0, 0, 1],
            [0, 1, 2, 0, 0, 0, 0],
            [0, 1, 1, 1, 0, 0, 0],
            [0, 1, 1, 0, 1, 0, 0],
            [0, 1, 1, 0, 0, 1, 0],
            [0, 1, 1, 0, 0, 0, 1],
            [0, 1, 0, 2, 0, 0, 0],
            [0, 1, 0, 1, 1, 0, 0],
            [0, 1, 0, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 0, 1],
            [0, 1, 0, 0, 2, 0, 0],
            [0, 1, 0, 0, 1, 1, 0],
            [0, 1, 0, 0, 1, 0, 1],
            [0, 1, 0, 0, 0, 2, 0],
            [0, 1, 0, 0, 0, 1, 1],
            [0, 1, 0, 0, 0, 0, 2],
            [0, 0, 3, 0, 0, 0, 0],
            [0, 0, 2, 1, 0, 0, 0],
            [0, 0, 2, 0, 1, 0, 0],
            [0, 0, 2, 0, 0, 1, 0],
            [0, 0, 2, 0, 0, 0, 1],
            [0, 0, 1, 2, 0, 0, 0],
            [0, 0, 1, 1, 1, 0, 0],
            [0, 0, 1, 1, 0, 1, 0],
            [0, 0, 1, 1, 0, 0, 1],
            [0, 0, 1, 0, 2, 0, 0],
            [0, 0, 1, 0, 1, 1, 0],
            [0, 0, 1, 0, 1, 0, 1],
            [0, 0, 1, 0, 0, 2, 0],
            [0, 0, 1, 0, 0, 1, 1],
            [0, 0, 1, 0, 0, 0, 2],
            [0, 0, 0, 3, 0, 0, 0],
            [0, 0, 0, 2, 1, 0, 0],
            [0, 0, 0, 2, 0, 1, 0],
            [0, 0, 0, 2, 0, 0, 1],
            [0, 0, 0, 1, 2, 0, 0],
            [0, 0, 0, 1, 1, 1, 0],
            [0, 0, 0, 1, 1, 0, 1],
            [0, 0, 0, 1, 0, 2, 0],
            [0, 0, 0, 1, 0, 1, 1],
            [0, 0, 0, 1, 0, 0, 2],
            [0, 0, 0, 0, 3, 0, 0],
            [0, 0, 0, 0, 2, 1, 0],
            [0, 0, 0, 0, 2, 0, 1],
            [0, 0, 0, 0, 1, 2, 0],
            [0, 0, 0, 0, 1, 1, 1],
            [0, 0, 0, 0, 1, 0, 2],
            [0, 0, 0, 0, 0, 3, 0],
            [0, 0, 0, 0, 0, 2, 1],
            [0, 0, 0, 0, 0, 1, 2],
            [0, 0, 0, 0, 0, 0, 3]
        ]

coeffs = [
                    -9.01296786258271e-09,
                    -0.10896882846497509,
                    -0.10853982919194856,
                    -0.10797172136815252,
                    -0.10836245006176713,
                    -0.10717362854214801,
                    -0.10630809589458619,
                    -0.10611668475280976,
                    0.1018441088127854,
                    -0.29156263370672636,
                    0.15030977435755485,
                    -0.27970276573232306,
                    -0.10856180727323031,
                    0.7202027229620934,
                    -0.394296885687019,
                    0.08841203603686551,
                    -0.07876974851221297,
                    0.4639642198438167,
                    -0.1338209748056427,
                    -0.30737611618016203,
                    0.1704964007391532,
                    0.038419655754387494,
                    -0.35297065070996425,
                    0.28954322872379035,
                    -0.5936142752168633,
                    0.5088708892379177,
                    0.2017921011370662,
                    0.3664161731467015,
                    -0.09256800886548264,
                    -0.5082676826299879,
                    -0.33066729858376653,
                    0.435871169142668,
                    -0.18755188929994585,
                    -0.14802778415890552,
                    0.13385752898933034,
                    0.13861381729691324,
                    0.00033697203339216886,
                    0.000577036622566876,
                    -0.00026703343509569544,
                    -0.002085712410566487,
                    0.0006488737222526131,
                    -0.0022226528642789456,
                    0.0022908850274204196,
                    0.00010065343042160724,
                    -0.0036152458122224174,
                    -0.0013891283203401016,
                    0.011499487875956338,
                    -0.001993802075751727,
                    -0.005711921780282625,
                    -0.0006885566880878158,
                    0.014481913617715864,
                    -0.01105626390136949,
                    -0.0002795159763976651,
                    0.0022982013572447266,
                    -0.009217706690401395,
                    0.0011676219870600663,
                    0.007305841244967498,
                    0.0011866424602698378,
                    -0.000660773260111186,
                    0.004303907546897023,
                    -0.005842868665378403,
                    -0.0019415051623548618,
                    -0.0013635024107342963,
                    0.0025227981029237005,
                    -0.0012598097621594473,
                    0.0019788666202843475,
                    0.005873556118795635,
                    -0.0109564959493781,
                    0.0013847802133823972,
                    0.0053491382344005856,
                    0.005319428824723138,
                    -0.020257391457117968,
                    0.009506692940759204,
                    0.0034406767191801635,
                    -0.0036240608493637166,
                    0.00990513006240662,
                    0.0010213965077521259,
                    -0.009504834567627851,
                    -0.0016613418070822866,
                    0.0012582494694848984,
                    -0.008206069214710995,
                    0.0056449819327975895,
                    0.004604671566847407,
                    0.004442263670410222,
                    -0.004937645231239185,
                    -0.0021830550683160366,
                    0.003940928769105734,
                    -0.000741610076521515,
                    -0.002105082347255538,
                    0.000804357527374705,
                    -0.0024380886490421028,
                    -0.0028568526842344955,
                    0.0068516256354572425,
                    -0.0010533346826473167,
                    0.0032743028047156897,
                    0.002429723180374141,
                    -0.0032297903509589387,
                    -0.0031557432816384234,
                    -0.0016366478648261462,
                    0.0026981258235022343,
                    0.0006353888728583695,
                    0.0038040250507793763,
                    -0.0067766944434226595,
                    0.0027217206448240105,
                    -0.007259891580550737,
                    0.013725523034511439,
                    -0.006323941572345726,
                    -0.004886260449524282,
                    0.004990511990065449,
                    -0.0011700057850328738,
                    0.001495410972971567,
                    -0.007177690445013429,
                    0.006235245504385201,
                    0.0006783836456762393,
                    0.0005375669127365423,
                    -0.0015796595707499583,
                    0.0034708882754972414,
                    -0.005639548139745543,
                    0.0021213263441583197,
                    9.187340558305945e-05
                ]

intercept = 1197.4828546444014

# CHUTIYA VALUES DAMPING EXAMPLE:
# ARJUN CHANGE ACCORDINGLY
threshold = 9                                   # ARJUN DON'T CHANGE THIS   
with open("haha.txt", "w") as f:
    for i in range(len(X_test)):
        f.write(f"\ninitial_X_test[i][j]:{X_test[i][6]}\n")
        for j in range(len(X_test[i])):
            if 7*i+j < 10: continue
            sum = 0
            for k in range(j):
                sum += X_test[i][k]
            for k in range(max(0,7-(10-j)), 7):
                sum += X_test[i-1][k]
            for k in range(14-(10-j), 7):
                sum += X_test[i-2][k]
            avg = sum / 10
            f.write(f"avg:{avg}\n")
            # f.write(f"initial_X_test[i][j]:{X_test[i][j]}\n")
            if abs(X_test[i][j]-avg) > threshold:
                X_test[i][j] = avg + threshold*(X_test[i][j]-avg)/abs(X_test[i][j]-avg)
        f.write(f"final_X_test[i][j]:{X_test[i][6]}\n")